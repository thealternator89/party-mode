<div id="song_info" style="visibility: hidden;">
    <img id="song_thumb" src="{{thumbnailSrc}}">
    <div id="song_title">{{videoTitle}}</div>
    <div id="song_added_by">Added by {{addedBy}}</div>
</div>

<div id="pausedOsd"><i id="pausedIcon" class="material-icons">pause</i></div>

<div id="loading_curtain"></div>

<div id="player"></div>

<script>
var tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
var player;
function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
    videoId: '{{videoId}}',
    playerVars: { 'autoplay': 1, 'controls': 0 },
    events: {
        'onStateChange': onPlayerStateChange
    }
    });
}

function onPlayerStateChange(event) { 
    switch (event.data) {
        case YT.PlayerState.ENDED:
            document.getElementById('player').style.visibility = 'hidden';
            location.reload();
            break;
        case YT.PlayerState.PAUSED:
            document.getElementById('pausedOsd').style.visibility = 'visible';
            break;
        case YT.PlayerState.PLAYING:
            setTimeout(function() {
                document.getElementById('loading_curtain').style.visibility = 'hidden';
            }, 100);
        default: {
            document.getElementById('pausedOsd').style.visibility = 'hidden';
        }
    }
}

// If the video hasn't changed from 'unstarted' within 10 seconds, reload to get a new song.
setTimeout(() => {
    if(player.getPlayerState() === YT.PlayerState.UNSTARTED){
        location.reload();
    }
}, 10000);

setTimeout(() => {
    document.getElementById('song_info').style.visibility = 'visible';
}, 1000);

setTimeout(() => {
    document.getElementById('song_info').style.visibility = 'hidden';
}, 10000);
</script>