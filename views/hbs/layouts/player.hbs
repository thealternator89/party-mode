<!DOCTYPE html>
<html>
    <head>
        <title>PartyMode for YouTube</title>
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" crossorigin="anonymous">
        <link rel="stylesheet" type="text/css" href="animate.css">
        <link rel="stylesheet" type="text/css" href="player.css">
        <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
        <script>
            var queueKey = new URL(window.location.href).searchParams.get('key');
            function sendBeacon(eventName, additionalData) {
                var timestamp = Math.round((new Date()).getTime() / 1000);
                var url = '/api/player/update?key=' + queueKey;
                var dataObj = {event: eventName, time: timestamp};
                Object.assign(dataObj, additionalData);

                var urlEncodedData = getUrlEncodedData(dataObj);

                var dataBlob = new Blob([urlEncodedData],
                    {type : 'application/x-www-form-urlencoded'});
                navigator.sendBeacon(url, dataBlob);
            }

            function getUrlEncodedData(data) {
                var urlEncodedDataPairs = [];

                for (var name in data) {
                    if(!data.hasOwnProperty(name)) {
                        continue;
                    }
                    urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));
                }

                return urlEncodedDataPairs.join('&').replace(/%20/g, '+');
            } 
        </script>
    </head>
     <body>
         <!-- Include an invisible curtain to prevent things interacting with the page-->
        <div id="invisible_curtain"></div>
        <div id="auth_info_panel">
            <div id="auth_header">Add to the queue:</div>
            <div id="host"></div>
            <div id="pass_phrase">{{authString}}</div>
            <div id="current_queue">Currently queued: <span id="queue_size">{{queueSize}}</span></div>
        </div>
        {{{body}}}
        <script>
            document.getElementById('host').innerText = new URL(window.location.href).host;

            if(queueKey) {
                // Set up long polling

                // Set up updating logic

                // Set up unload logic
                window.onbeforeunload = function() {
                    sendBeacon('unloaded');
                    return null;
                }

                // Notify the server that the player has loaded
                sendBeacon('load');

                (function poll() {
                    console.log('Initiating Poll');
                    $.ajax({
                        url: '/api/player/poll?key=' + queueKey,
                        success: function(response) {
                            console.log('Poll received from server');
                            // If the queueLength is now > 0 and we're not currently playing a song, reload to get a song.
                            if (typeof(YT) === 'undefined' && response.queueLength > 0) {
                                location.reload();
                            }

                            if (typeof(response.command) !== 'undefined' && typeof(player) !== 'undefined') {
                                switch (response.command) {
                                    case 'PLAY': player.playVideo();
                                        break;
                                    case 'PAUSE': player.pauseVideo();
                                        break;
                                    case 'NEXTTRACK': location.reload();
                                        break;
                                    case 'REPLAYTRACK': player.seekTo(0);
                                        break;
                                    default: console.log('unknown command: ' + response.command);
                                }
                            }

                            document.getElementById('queue_size').innerText = response.queueLength;
                        },
                        error: function(xhr, textStatus, error) {
                            console.log('Error occurred: ' + textStatus + ' - ' + error);
                        },
                        dataType: "json",
                        complete: poll 
                    });
                })();
            }
        </script>
     </body>
</html>